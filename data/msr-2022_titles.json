[
    "An Empirical Evaluation of GitHub Copilot\u2019s Code Suggestions",
    "An Alternative Issue Tracking Dataset of Public Jira Repositories",
    "Refactoring Debt: Myth or Reality? An Exploratory Study on the Relationship Between Technical Debt and Refactoring",
    "Towards Using Gameplay Videos for Detecting Issues in Video Games",
    "Operationalizing Threats to MSR Studies by Simulation-Based Testing",
    "Beyond Duplicates: Towards Understanding and Predicting Link Types in Issue Tracking Systems",
    "The General Index of Software Engineering Papers",
    "Geographic Diversity in Public Code Contributions",
    "Challenges and Future Research Direction for Microtask Programming in Industry",
    "Tooling for Time- and Space-efficient git Repository Mining",
    "ManyTypes4TypeScript: A Comprehensive TypeScript Dataset for Sequence-Based Type Inference",
    "GitDelver Enterprise Dataset (GDED): An Industrial Closed-source Dataset for Socio-Technical Research",
    "The Unexplored Treasure Trove of Phabricator Code Reviews",
    "Toward Granular Automatic Unit Test Case Generation",
    "On the Violation of Honesty in Mobile Apps: Automated Detection and Categories",
    "Exploring Apache Incubator Project Trajectories with APEX",
    "DISCO: A Dataset of Discord Chat Conversations for Software Engineering Research",
    "The OCEAN mailing list data set: Network analysis spanning mailing lists and code repositories",
    "Do Customized Android Frameworks Keep Pace with Android?",
    "On the Naturalness of Fuzzer Generated Code",
    "CLIP meets GamePhysics: Towards bug identification in gameplay videos using zero-shot transfer learning",
    "Improve Quality of Cloud Serverless Architectures through Software Repository Mining",
    "Does Configuration Encoding Matter in Learning Software Performance? An Empirical Study on Encoding Schemes",
    "TSSB-3M: Mining single statement bugs at massive scale",
    "Challenges in Migrating Imperative Deep Learning Programs to Graph Execution: An Empirical Study",
    "A Large-Scale Comparison of Python Code in Jupyter Notebooks and Scripts",
    "Senatus: A Fast and Accurate Code-to-Code Recommendation Engine",
    "An Empirical Study on Maintainable Method Size in Java",
    "CamBench - Cryptographic API Misuse Detection Tool Benchmark Suite",
    "Multimodal Recommendation of Messenger Channels",
    "Improved Business Outcomes from Cloud Applications \u2013 using Integrated Process and Runtime Product Data Mining",
    "Inspect4py: A Knowledge Extraction Framework for Python Code Repositories",
    "Vul4J: A Dataset of Reproducible Java Vulnerabilities Geared Towards the Study of Program Repair Techniques",
    "A Culture of Productivity: Maximizing Productivity by Maximizing Wellbeing",
    "Characterizing High-Quality Test Methods: A First Empirical Study",
    "DaSEA \u2013 A Dataset for Software Ecosystem Analysis",
    "npm-filter: Automating the mining of dynamic information from npm packages",
    "Mining the Ethereum Blockchain Platform: Best Practices and Pitfalls",
    "Bias in MSR research",
    "TriggerZoo: A Dataset of Android Applications Automatically Infected with Logic Bombs",
    "AndroOBFS: Time-tagged Obfuscated Android Malware Dataset with Family Information",
    "The Next Generation of Software Developers",
    "SniP: An Efficient Stack Tracing Framework for Multi-threaded Programs",
    "WeakSATD: detecting weak self-admitted technical debt",
    "Lupa: A Platform for Large Scale Analysis of The Progamming Language Usage",
    "BotHunter: An Approach to Detect Software Bots in GitHub",
    "The Unsolvable Problem or the Unheard Answer? A Dataset of 24,669 Open-Source Software Conference Talks",
    "Dataset: Dependency Networks of Open Source Libraries Available Through CocoaPods, Carthage and Swift PM",
    "How heated is it? Understanding GitHub locked issues",
    "It's all in your network: How mining developer collaboration allowed us to peer into complex socio-technical aspects of software development",
    "An Empirical Study on the Survival Rate of GitHub Projects",
    "Is Refactoring Always a Good Egg? Exploring the Interconnection Between Bugs and Refactorings",
    "Complex Python Features in the Wild",
    "Methods2Test: A dataset of focal methods mapped to test cases",
    "LibDB: An Effective and Efficient Framework for Detecting Third-Party Libraries in Binaries",
    "Noisy Label Learning for Security Defects",
    "Is Surprisal in Issue Trackers Actionable?",
    "On the Co-Occurrence of Refactoring of Test and Source Code",
    "On the Use of Fine-grained Vulnerable Code Statements for Software Vulnerability Assessment Models",
    "FixJS: A Dataset of Bug-fixing JavaScript Commits",
    "Mining Software Repositories in the age of AI",
    "The Unexplored Treasure Trove of Phabricator Code Reviews",
    "FaST: A linear time stack trace alignment heuristic for crash report deduplication",
    "Methods for Stabilizing Models across Large Samples of Projects(with case studies on Predicting Defect and Project Health)",
    "Constructing Dataset of Functionally Equivalent Java Methods Using Automated Test Generation Techniques",
    "Mining Code Review Data to Understand Waiting Times Between Acceptance and Merging: An Empirical Analysis",
    "LineVD: Statement-level Vulnerability Detection using Graph Neural Networks",
    "GraphCode2Vec: Generic Code Embedding via Lexical and Program Dependence Analyses",
    "Is GitHub's Copilot as Bad As Humans at Introducing Vulnerabilities in Code?",
    "LAGOON: An Analysis Tool for Open Source Communities",
    "ECench: An Energy Bug Benchmark of Ethereum Client Software",
    "Back to the future: Empirical Revolution(s) in Software Engineering",
    "Bot Detection in GitHub Repositories",
    "Can instability variations warn developers when open-source projects boost?",
    "Is Open Source Eating the World\u2019s Software? Measuring the Proportion of Open Source in proprietary software using Java Binaries",
    "From Models to Systems: Rethinking the Role of Software Engineering for Machine Learning",
    "Engineering the MSR Field and the Joy of Research",
    "Software Bots in Software Engineering: Benefits and Challenges",
    "A Versatile Dataset of Agile Open Source Software Projects",
    "Methods for Stabilizing Models across Large Samples of Projects(with case studies on Predicting Defect and Project Health)",
    "A Large-scale Dataset of (Open Source) License Text Variants",
    "SECOM: Towards a convention for security commit messages",
    "Detecting Privacy-Sensitive Code Changes with Language Modeling",
    "Extracting corrective actions from code repositories",
    "Problems and Solutions in Applying Continuous Integration and Delivery to 20 Open-Source Cyber-Physical Systems",
    "Finding the Fun in Fundraising: Public Issues and Pull Requests in VC-backed Open-Core Companies",
    "GitRank: A Framework to Rank GitHub Repositories",
    "LAGOON: An Analysis Tool for Open Source Communities",
    "TwinDroid: A Dataset of Android app System call traces and Trace Generation Pipeline",
    "Towards Understanding Barriers and Mitigation Strategies of Software Engineers with Non-traditional Educational and Occupational Backgrounds",
    "Do Small Code Changes Merge Faster? A Multi-Language Empirical Investigation",
    "Using Datalore for Reproducible Research",
    "LineVul: A Transformer-based Line-Level Vulnerability Prediction",
    "OpenSSL 3.0.0: An exploratory case study",
    "To Type or Not to Type? A Systematic Comparison of the Software Quality of JavaScript and TypeScript Applications on GitHub",
    "Evaluating few shot and Contrastive learning Methods for Code Clone Detection",
    "Code Review Practices for Refactoring Changes: An Empirical Study on OpenStack",
    "Evaluating the effectiveness of local explanation methods on source code-based defect prediction models",
    "A Time Series-Based Dataset of Open-Source Software Evolution",
    "Mining Code Review Data to Understand Waiting Times Between Acceptance and Merging: An Empirical Analysis",
    "Do Small Code Changes Merge Faster? A Multi-Language Empirical Investigation",
    "Using Bandit Algorithms for Selecting Feature Reduction Techniques in Software Defect Prediction",
    "Varangian: A Git Bot for Augmented Static Analysis",
    "GraphCode2Vec: Generic Code Embedding via Lexical and Program Dependence Analyses",
    "A Deep Study of the Effects and Fixes of Server-Side Request Races in Web Applications",
    "GrimoireLab Maintenance and Evolution",
    "Automatically Prioritizing and Assigning Tasks from Code Repositories in Puzzle Driven Development",
    "Microsoft CloudMine: Data Mining for the Executive Order on Improving the Nation\u2019s Cybersecurity",
    "To What Extent do Deep Learning-based Code Recommenders Generate Predictions by Cloning Code from the Training Set?",
    "Replicating Data Pipelines with GrimoireLab",
    "Empirical Standards for Repository Mining",
    "Towards Reliable Agile Iterative Planning via Predicting Documentation Changes of Work Items",
    "Quid Pro Quo: An Exploration of Reciprocity in Code Review",
    "Recommending Code Improvements Based on Stack Overflow Answer Edits",
    "Comments on Comments: Where Code Review and Documentation Meet",
    "Using Active Learning to Find High-Fidelity Builds",
    "Which bugs are missed in code reviews: An empirical study on SmartSHARK dataset",
    "SoCCMiner: A Source Code-Comments and Comment-Context Miner",
    "SOSum: A Dataset of Stack Overflow Post Summaries",
    "Investigating the Impact of Forgetting in Software Development",
    "An Exploratory Study on Refactoring Documentation in Issues Handling",
    "Smelly Variables in Ansible Infrastructure Code: Detection, Prevalence, and Lifetime",
    "npm-filter: Automating the mining of dynamic information from npm packages",
    "On the Naturalness of Fuzzer Generated Code",
    "Beyond Duplicates: Towards Understanding and Predicting Link Types in Issue Tracking Systems",
    "ApacheJIT: A Large Dataset for Just-In-Time Defect Prediction",
    "SOSum: A Dataset of Stack Overflow Post Summaries",
    "Code Review Practices for Refactoring Changes: An Empirical Study on OpenStack",
    "Geographic Diversity in Public Code Contributions",
    "Senatus: A Fast and Accurate Code-to-Code Recommendation Engine",
    "The General Index of Software Engineering Papers",
    "SLNET: A Redistributable Corpus of 3rd-party Simulink Models",
    "Studying the Impact of Continuous Delivery Adoption on Bug-Fixing Time in Apache\u2019s Open-Source Projects",
    "Challenges in Migrating Imperative Deep Learning Programs to Graph Execution: An Empirical Study",
    "How to Improve Deep Learning for Software Analytics (a case study with code smell detection)",
    "Starting the InnerSource Journey: Key Goals and Metrics to Measure Collaboration",
    "Dazzle: Using Optimized Generative Adversarial Networks to Address Security Data Class Imbalance Issue",
    "CamBench - Cryptographic API Misuse Detection Tool Benchmark Suite",
    "SLNET: A Redistributable Corpus of 3rd-party Simulink Models",
    "Between JIRA and GitHub: ASFBot and its Influence on Human Comments in Issue Trackers",
    "An Exploratory Study on Refactoring Documentation in Issues Handling",
    "Painting the Landscape of Automotive Software in GitHub",
    "ReCover: a Curated Dataset for Regression Testing Research",
    "Mining the Usage of Reactive Programming APIs: A Study on GitHub and Stack Overflow",
    "Real-World Clone-Detection in Go",
    "TSSB-3M: Mining single statement bugs at massive scale",
    "Does This Apply to Me? An Empirical Study of Technical Context in Stack Overflow",
    "How to Improve Deep Learning for Software Analytics (a case study with code smell detection)",
    "Smelly Variables in Ansible Infrastructure Code: Detection, Prevalence, and Lifetime",
    "Dataset: Dependency Networks of Open Source Libraries Available Through CocoaPods, Carthage and Swift PM",
    "Comments on Comments: Where Code Review and Documentation Meet",
    "Refactoring Debt: Myth or Reality? An Exploratory Study on the Relationship Between Technical Debt and Refactoring",
    "SoCCMiner: A Source Code-Comments and Comment-Context Miner",
    "Investigating the Impact of Forgetting in Software Development",
    "Painting the Landscape of Automotive Software in GitHub",
    "A Large-scale Dataset of (Open Source) License Text Variants",
    "Operationalizing Threats to MSR Studies by Simulation-Based Testing",
    "Between JIRA and GitHub: ASFBot and its Influence on Human Comments in Issue Trackers"
]